<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacelogo" kind="namespace" language="C++">
    <compoundname>logo</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacelogo_1a75fab9a3dcd27565e40b08dbbcbf5e6b" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string logo::border</definition>
        <argsstring></argsstring>
        <name>border</name>
        <initializer>= &quot;===========================\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Линия. <programlisting><codeline><highlight class="normal">===========================</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Logo.h" line="17" column="1" bodyfile="src/core/Logo.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelogo_1adf18ab31906b644891fc8311df747a9d" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string logo::little_help</definition>
        <argsstring></argsstring>
        <name>little_help</name>
        <initializer>= &quot;==== &lt;- use to <ref refid="namespacelogo_1a03b6b80b5648e7dbbbf00b258df733b6" kindref="member">move</ref> -&gt; ====\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Помощь по управлению. <programlisting><codeline><highlight class="normal">====<sp/>&lt;-<sp/>use<sp/>to<sp/>move<sp/>-&gt;<sp/>====</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Logo.h" line="23" column="1" bodyfile="src/core/Logo.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelogo_1ae5491adc000fde7d3d8229372c877da2" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string logo::license</definition>
        <argsstring></argsstring>
        <name>license</name>
        <initializer>= &quot;Do you agree with the license?\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Вопрос о согласии с лицензионным соглашением. <programlisting><codeline><highlight class="normal">Do<sp/>you<sp/>agree<sp/>with<sp/>the<sp/>license?</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Logo.h" line="29" column="1" bodyfile="src/core/Logo.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelogo_1a7570bf74bf945a06ced26f6fccaeab53" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string logo::move_indentation</definition>
        <argsstring></argsstring>
        <name>move_indentation</name>
        <initializer>= &quot;       &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Отступ. Используется в связке с move. <programlisting><codeline><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}&lt;-<sp/>use<sp/>to<sp/>move<sp/>-&gt;</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Logo.h" line="35" column="1" bodyfile="src/core/Logo.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelogo_1a03b6b80b5648e7dbbbf00b258df733b6" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string logo::move</definition>
        <argsstring></argsstring>
        <name>move</name>
        <initializer>= &quot;&lt;- use to move -&gt;\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Помощь по управлению. <programlisting><codeline><highlight class="normal">&lt;-<sp/>use<sp/>to<sp/>move<sp/>-&gt;</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Logo.h" line="41" column="1" bodyfile="src/core/Logo.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelogo_1abbbdbfbbcae50e2017f3ed1bdf0e1fa3" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string logo::radix</definition>
        <argsstring></argsstring>
        <name>radix</name>
        <initializer>= &quot;  _____           _ _      \n |  __ \\         | (_)     \n | |__) |__ _  __| |___  __\n |  _  // _` |/ _` | \\ \\/ /\n | | \\ \\ (_| | (_| | |&gt;  &lt; \n |_|  \\_\\__,_|\\__,_|_/_/\\_\\ \n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Логотип программы <programlisting><codeline><highlight class="normal"><sp/>_____<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/>_<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">|<sp/><sp/>__<sp/>\<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(_)<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">|<sp/>|__)<sp/>|__<sp/>_<sp/><sp/>__|<sp/>|___<sp/><sp/>__</highlight></codeline>
<codeline><highlight class="normal">|<sp/><sp/>_<sp/><sp/>//<sp/>_`<sp/>|/<sp/>_`<sp/>|<sp/>\<sp/>\/<sp/>/</highlight></codeline>
<codeline><highlight class="normal">|<sp/>|<sp/>\<sp/>\<sp/>(_|<sp/>|<sp/>(_|<sp/>|<sp/>|&gt;<sp/><sp/>&lt;<sp/></highlight></codeline>
<codeline><highlight class="normal">|_|<sp/><sp/>\_\__,_|\__,_|_/_/\_\</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Logo.h" line="53" column="1" bodyfile="src/core/Logo.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelogo_1ad29ac81055f7eb3624a283f55af8d5ad" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string logo::loading</definition>
        <argsstring></argsstring>
        <name>loading</name>
        <initializer>= &quot;  _                     _ \n | |                   | |\n | |     ___   __ _  __| |\n | |    / _ \\ / _` |/ _` |\n | |___| (_) | (_| | (_| |\n |______\\___/ \\__,_|\\__,_|\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Логотип загрузки <programlisting><codeline><highlight class="normal"><sp/>_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/></highlight></codeline>
<codeline><highlight class="normal">|<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>|<sp/><sp/><sp/><sp/><sp/>___<sp/><sp/><sp/>__<sp/>_<sp/><sp/>__|<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>|<sp/><sp/><sp/><sp/>/<sp/>_<sp/>\<sp/>/<sp/>_`<sp/>|/<sp/>_`<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>|___|<sp/>(_)<sp/>|<sp/>(_|<sp/>|<sp/>(_|<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|______\___/<sp/>\__,_|\__,_|<sp/><sp/></highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Logo.h" line="65" column="1" bodyfile="src/core/Logo.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacelogo_1aba8ca66bcf8abe6a0991a13887671863" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string logo::exit</definition>
        <argsstring></argsstring>
        <name>exit</name>
        <initializer>= &quot;  ______      _ _   \n |  ____|    (_) |  \n | |__  __  ___| |_ \n |  __| \\ \\/ / | __|\n | |____ &gt;  &lt;| | |_ \n |______/_/\\_\\_|\\__|\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Выход <programlisting><codeline><highlight class="normal"><sp/>______<sp/><sp/><sp/><sp/><sp/><sp/>_<sp/>_<sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">|<sp/><sp/>____|<sp/><sp/><sp/><sp/>(_)<sp/>|<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">|<sp/>|__<sp/><sp/>__<sp/><sp/>___|<sp/>|_<sp/></highlight></codeline>
<codeline><highlight class="normal">|<sp/><sp/>__|<sp/>\<sp/>\/<sp/>/<sp/>|<sp/>__|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>|____<sp/>&gt;<sp/><sp/>&lt;|<sp/>|<sp/>|_<sp/></highlight></codeline>
<codeline><highlight class="normal">|______/_/\_\_|\__|</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Logo.h" line="77" column="1" bodyfile="src/core/Logo.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/core/Logo.h" line="11" column="1"/>
  </compounddef>
</doxygen>
