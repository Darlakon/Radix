<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_rules_list_8cpp" kind="file" language="C++">
    <compoundname>RulesList.cpp</compoundname>
    <includes local="no">fstream</includes>
    <includes local="no">string</includes>
    <includes refid="_constants_8h" local="yes">../core/Constants.h</includes>
    <incdepgraph>
      <node id="192">
        <label>string</label>
      </node>
      <node id="191">
        <label>fstream</label>
      </node>
      <node id="193">
        <label>../core/Constants.h</label>
        <link refid="_constants_8h"/>
      </node>
      <node id="190">
        <label>RulesList.cpp</label>
        <link refid="_rules_list_8cpp"/>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_rules_list_8cpp_1a7c6f9bd6ee5089b03c66028f99271e15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string s_ruleslist</definition>
        <argsstring>()</argsstring>
        <name>s_ruleslist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Чтение правил программы <simplesect kind="return"><para>строка с правилами </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/io/RulesList.cpp" line="17" column="1" bodyfile="src/io/RulesList.cpp" bodystart="17" bodyend="38"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Модуль чтения правил. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="7"><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../core/Constants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="_rules_list_8h_1a5010d1a6599fe48d9bd963375613da92" refkind="member"><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="_rules_list_8cpp_1a7c6f9bd6ee5089b03c66028f99271e15" kindref="member">s_ruleslist</ref>()<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Создание<sp/>двух<sp/>переменных<sp/>тип<sp/>строка.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_buff<sp/>-<sp/>буфер,<sp/>в<sp/>который<sp/>будет<sp/>помещаться<sp/>строка<sp/>из<sp/>файла.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_ret<sp/>-<sp/>строка,<sp/>которая<sp/>будет<sp/>возвращена.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>s_buff<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>s_ret<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Открытие<sp/>файла<sp/>с<sp/>настройками<sp/>(radix::rules_list).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>ifstream<sp/>fin(<ref refid="namespaceradix_1a73b088a3e903cc2845c2299b9ab8ccaf" kindref="member">radix::rules_list</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Если<sp/>файл<sp/>есть<sp/>и<sp/>его<sp/>можно<sp/>открыть.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fin.is_open())<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Цикл,<sp/>который<sp/>помещает<sp/>в<sp/>буфер<sp/>строку<sp/>из<sp/>файла,<sp/>до<sp/>конца<sp/>файла.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(fin,<sp/>s_buff))<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Добавить<sp/>к<sp/>строке<sp/>s_ret<sp/>строку<sp/>из<sp/>файла<sp/>и<sp/>перенести<sp/>строку.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_ret<sp/>+=<sp/>s_buff<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Закрытие<sp/>файла.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>fin.close();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Возвращение<sp/>строки<sp/>s_ret,<sp/>в<sp/>которой<sp/>условия<sp/>программы.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_ret;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/io/RulesList.cpp"/>
  </compounddef>
</doxygen>
